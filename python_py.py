# -*- coding: utf-8 -*-
"""python.py

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rvSs2b6vmYd82iY1dWrOHsTU3VvVGlS_
"""

text=["php","python","madam","hello","mom"]
print("original list of strings:",text)
result=list(filter(lambda x:(x=="".join(reversed(x))),text))
print("list of palindromes:")
print(result)

list1=[]
n=int(input("enter list size"))
for i in range(0,n):
  ele=int(input())
  if (ele%2==0):
    list1.append(ele)
  else:
    continue
print(list1)

list1=[2,1,3,4]
total=0
n=int(input("enter number to be multiplied"))
newlist=[i*n for i in list1]
print(newlist)
for i in range(0,len(newlist)):
  total=total+newlist[i]
print("sum of elements=",total)

tuple1=((3,4,6),(1,2,3,5),(6,5,2,1,8,16),(4,3))
def count_digit(e):
  return len(e)
list1=list(tuple1)
print(list1)
list1.sort(key=count_digit)
tuple1=tuple(list1)
print("sorted tuple is:",tuple1)

emp=((200,'vitika',90000),(20,'sita',50000),(40,'karthik',20000))
print(sorted(emp))
print(sorted(emp,key=lambda x:x[1]))

tuple1=((1,'rani',20),(2,'ravi',21),(3,'geeta',22),(4,'raju',23))
print(tuple1)
newtuple=[{'key':sub[0],'value':sub[1],'id':sub[2]} for sub in tuple1]
print("the converted dictionary is:",newtuple)

tuple1=(('ram',7),('raju',5),('rani',8),('vani',9))
print(tuple1)
list1=list(tuple1)
def sortlist(list1):
  list1.sort(key=lambda x:x[1])
  return list1
tuple1=tuple(sortlist(list1))
print(tuple1)

dict1={'name':'sai','age':20}
dict2={'name':'sai','age':20}
if dict1==dict2:
  print("dict1 is equal to dict2")
else:
  print("dict1 is not equal to dict2")

dict1={'apple':33,'mango':22,'grape':25}
s=0
for val in dict1.values():
  s=s+val
s=s/len(dict1)
print("average of dictionary values=",s)

dict1={'abc':5,'def':7,'ghi':3}
print(dict1)
k=5
res={}
for key in dict1:
  if not(isinstance(dict1[key],int) and dict1[key]>k):
    res[key]=dict1[key]
print("the constructed dictionary=",str(res))

